# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import my_if_pb2 as my__if__pb2  # エラーになったので`from .`を追加しています


class MyGrpcStub(object):
  """サンプルサービス
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetSomething = channel.unary_unary(
        '/MyGrpc/GetSomething',
        request_serializer=my__if__pb2.MyReq.SerializeToString,
        response_deserializer=my__if__pb2.MyResp.FromString,
        )


class MyGrpcServicer(object):
  """サンプルサービス
  """

  def GetSomething(self, request, context):
    """なにかを受け取るRPC
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MyGrpcServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetSomething': grpc.unary_unary_rpc_method_handler(
          servicer.GetSomething,
          request_deserializer=my__if__pb2.MyReq.FromString,
          response_serializer=my__if__pb2.MyResp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'MyGrpc', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
